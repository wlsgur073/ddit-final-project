<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Task-Mapper">
	<select id="selectMyTaskChartByUserId" parameterType="str" resultType="myTaskChart">
		SELECT DISTINCT
			   (SELECT COUNT(STATUS) FROM TASK WHERE STATUS = 'B201' AND USER_ID = #{userId}) AS B201
			 , (SELECT COUNT(STATUS) FROM TASK WHERE STATUS = 'B202' AND USER_ID = #{userId}) AS B202
			 , (SELECT COUNT(STATUS) FROM TASK WHERE STATUS = 'B203' AND USER_ID = #{userId}) AS B203
			 , (SELECT COUNT(STATUS) FROM TASK WHERE STATUS = 'B204' AND USER_ID = #{userId}) AS B204
		  FROM TASK
	</select>

	<update id="deleteMyTaskByTaskNo" parameterType="str">
		DELETE
		  FROM TASK
		 WHERE TASK_NO = #{taskNo}
	</update>

	<select id="selectProjectNameForSort" parameterType="str" resultType="task">
		SELECT DISTINCT B.TITLE AS PROJ_TITLE
			 , B.PROJ_NO
		  FROM USER_PROJECT A, PROJECT B
		 WHERE USER_ID = #{userId}
		   AND A.PROJ_NO = B.PROJ_NO
		   AND
		   		IS_DELETED = 0
		 ORDER BY PROJ_TITLE ASC
	</select>

	<select id="selectTaskListByUserId" parameterType="str" resultType="task">
		SELECT A.TASK_NO
			 , A.PROJ_NO
			 , A.TITLE
			 , A.USER_ID
			 , A.CONTENT
			 , A.IMPORTANT
			 , A.REGDATE
			 , A.UPDATEDATE
			 , A.STATUS
			 , A.DOC_CONT_NO
			 , A.STARTDATE
			 , A.ENDDATE
			 , B.NICKNAME
	      FROM TASK A, "USER" B
	     WHERE A.USER_ID = B.USER_ID
	       AND A.USER_ID = #{userId}
	</select>


	<select id="selectTaskCountByProjectNo" parameterType="String">
		SELECT
			COUNT(*)
		FROM
			TASK
		WHERE
			PROJ_NO = #{projNo}
	</select>

	<select id="selectTaskCountInProjByUserId" resultType="int" parameterType="User">
		SELECT
			COUNT(*)
		FROM
			TASK A
		JOIN
			USER_PROJECT B ON(A.USER_ID = B.USER_ID AND A.PROJ_NO = B.PROJ_NO)
		WHERE
			A.USER_ID = #{userId}
		  AND
            A.PROJ_NO = #{projNo}
	</select>

	<select id="selectTaskListByProjectNo" resultType="task" parameterType="String">
		SELECT
        	A.TASK_NO AS TASK_NO,
            A.TITLE AS TITLE,
            B.NICKNAME AS USER_ID,
            A.CONTENT AS CONTENT,
            A.IMPORTANT AS IMPORTANT,
            A.REGDATE AS REGDATE,
            A.UPDATEDATE AS UPDATEDATE,
            A.STARTDATE AS STARTDATE,
            A.ENDDATE AS ENDDATE,
            A.STATUS AS STATUS,
            A.DOC_CONT_NO AS DOC_CONT_NO
		FROM
        	TASK A
		JOIN
			"USER" B ON A.USER_ID = B.USER_ID
		WHERE
			A.PROJ_NO = #{projNo}
	</select>

	<select id="selectTaskDetailByTaskNo" resultType="task" parameterType="task">
		SELECT
        	A.TASK_NO AS TASK_NO,
            A.TITLE AS TITLE,
            B.NICKNAME AS USER_ID,
            A.CONTENT AS CONTENT,
            A.IMPORTANT AS IMPORTANT,
            A.REGDATE AS REGDATE,
            A.UPDATEDATE AS UPDATEDATE,
            A.STARTDATE AS STARTDATE,
            A.ENDDATE AS ENDDATE,
            A.STATUS AS STATUS,
            A.DOC_CONT_NO AS DOC_CONT_NO
		FROM
        	TASK A
		JOIN
			"USER" B ON A.USER_ID = B.USER_ID
		WHERE
			A.PROJ_NO = #{projNo}
		AND
			A.TASK_NO = #{taskNo}
	</select>

	<insert id="insertTask" parameterType="task">
		INSERT INTO TASK (
		    TASK_NO   ,PROJ_NO   ,TITLE   ,USER_ID   ,CONTENT
		    ,IMPORTANT   ,REGDATE   ,UPDATEDATE   ,STATUS
		    ,DOC_CONT_NO   ,STARTDATE   ,ENDDATE, SESSION_ID
		) VALUES (
		    #{taskNo}   ,#{projNo}   ,#{title}   ,#{userId}   ,#{content}
		    ,#{important}   ,sysdate   ,sysdate   ,#{status}
		    ,1   ,#{startdate}   ,#{enddate}, #{sessionId}
		)
	</insert>

	<update id="updateTaskDetailByTaskNo" parameterType="task">
		UPDATE
			TASK
		SET
			PROJ_NO = #{projNo}
			,TITLE = #{title}
			,USER_ID = #{userId}
			,CONTENT = #{content}
			,IMPORTANT = #{important}
			,UPDATEDATE = sysdate
			,STATUS = #{status}
			,STARTDATE = #{startdate}
			,ENDDATE = #{enddate}
			,SESSION_ID = #{sessionId}
		WHERE
			TASK_NO = #{taskNo}
	</update>

	<update id="updateTaskStatus" parameterType="task">
		UPDATE
			TASK
		SET
			STATUS = #{status},
			UPDATEDATE = sysdate
		WHERE
			TASK_NO = #{taskNo}
	</update>

	<delete id="deleteTaskByTaskNo" parameterType="task">
		DELETE FROM
			TASK
		WHERE
			TASK_NO = #{taskNo}
	</delete>

	<select id="selectTaskSeqNext" resultType="int">
		SELECT
			TASK_SEQ.NEXTVAL AS TASK_NO FROM DUAL
	</select>

	<select id="selectFormatTaskListByUserId" parameterType="str" resultType="task">
		SELECT A.TASK_NO
			 , <include refid="formatProjNo"/>
			 , A.TITLE
			 , A.USER_ID
			 , A.CONTENT
			 , <include refid="importantForTask"/>
			 , A.REGDATE
			 , A.UPDATEDATE
			 , <include refid="formatStatus"/>
			 , A.DOC_CONT_NO
			 , A.STARTDATE
			 , A.ENDDATE
	      FROM TASK A
	     WHERE A.USER_ID = #{userId}
	</select>

	<sql id="formatStatus">
			(SELECT
				CODE_NAME
			FROM
				COMMON_CODE
            WHERE
            	COMMON_CODE.CODE_NO = A.STATUS) AS STATUS
	</sql>
	<sql id="formatProjNo">
			(SELECT
				TITLE
			FROM
				PROJECT
			WHERE
				PROJ_NO = A.PROJ_NO) AS PROJ_NO
	</sql>
	<sql id="importantForTask">
			(SELECT
				CODE_NAME
			FROM
				COMMON_CODE
            WHERE
            	COMMON_CODE.CODE_NO = A.IMPORTANT) AS IMPORTANT
	</sql>


</mapper>